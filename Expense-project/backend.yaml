- name: configure backend server 
  hosts: backend
  vars: 
    mysql_rootpass: ExpenseApp@1
    mysql_hostlogin: mysql.dev.divyavutakanti.com
    packages: 
    - nodejs
    - mysql 
  become: yes 
  tasks: 
  - name: install python libraries 
    ansible.builtin.pip: 
      name: 
      - PyMySQL
      - cryptography
      executable: pip3.9
  - name: disable  default nodejs version
    ansible.builtin.command: dnf module disable nodejs -y 
    
  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs 
    ansible.builtin.package: 
      name: "{{ item }}" 
      state: present
    loop: "{{ packages }}"
  - name: create expense user 
    ansible.builtin.user: 
      name: expense 
  - name: create directory 
    ansible.builtin.file: 
      path: /app 
      state: directory 
  - name: download the backend code
    ansible.builtin.get_url: 
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip 
      dest: /tmp/backend.zip 
  - name: extract the backend code 
    ansible.builtin.unarchive: 
      src: /tmp/backend.zip 
      dest: /app
      remote_src: yes 
  - name: install dependency 
    ansible.builtin.command: npm install 
    args:
      chdir: /app 
  - name: copy backend servcie 
    ansible.builtin.copy:
      src: backend.service 
      dest: /etc/systemd/system/backend.service 
  - name: import mysql data 
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_rootpass }}"
      login_host: "{{ mysql_hostlogin }}"
      state: import 
      name: all
      target: /app/schema/backend.sql 
  - name: deamon reload backend 
    ansible.builtin.systemd_service:
      daemon_reload: true 
      state: restarted
    